<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Mvc</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Builder.BuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> to add Mvc to the request execution pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Builder.BuilderExtensions.UseMvc(Microsoft.AspNet.Builder.IApplicationBuilder)">
            <summary>
            Adds Mvc to the <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/>.</param>
            <returns>The <paramref name="app"/>.</returns>
            <remarks>This method only supports attribute routing. To add conventional routes use
            <see cref="M:Microsoft.AspNet.Builder.BuilderExtensions.UseMvc(Microsoft.AspNet.Builder.IApplicationBuilder,System.Action{Microsoft.AspNet.Routing.IRouteBuilder})"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.Builder.BuilderExtensions.UseMvc(Microsoft.AspNet.Builder.IApplicationBuilder,System.Action{Microsoft.AspNet.Routing.IRouteBuilder})">
            <summary>
            Adds Mvc to the <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/>.</param>
            <param name="configureRoutes">A callback to configure Mvc routes.</param>
            <returns>The <paramref name="app"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.MvcOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.MvcOptionsSetup.ConfigureMvc(Microsoft.AspNet.Mvc.MvcOptions)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.RazorPreCompileModule">
            <summary>
            An <see cref="T:Microsoft.Framework.Runtime.Roslyn.ICompileModule"/> implementation that pre-compiles Razor views in the application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.RazorPreCompileModule.#ctor(System.IServiceProvider)">
            <summary>
            Instantiates a new <see cref="T:Microsoft.AspNet.Mvc.RazorPreCompileModule"/> instance.
            </summary>
            <param name="services">The <see cref="T:System.IServiceProvider"/> for the application.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.RazorPreCompileModule.GenerateSymbols">
            <summary>
            Gets or sets a value that determines if symbols (.pdb) file for the precompiled views is generated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.RazorPreCompileModule.BeforeCompile(Microsoft.Framework.Runtime.Roslyn.IBeforeCompileContext)">
            <inheritdoc />
            <remarks>Pre-compiles all Razor views in the application.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.RazorPreCompileModule.AfterCompile(Microsoft.Framework.Runtime.Roslyn.IAfterCompileContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.RazorViewEngineOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNet.Mvc.Razor.RazorViewEngineOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.RazorViewEngineOptionsSetup.#ctor(Microsoft.Framework.Runtime.IApplicationEnvironment)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.Razor.RazorViewEngineOptions"/>.
            </summary>
            <param name="applicationEnvironment"><see cref="T:Microsoft.Framework.Runtime.IApplicationEnvironment"/> for the application.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Resources.UnableToFindServices">
            <summary>
            Unable to find the required services. Please add all the required services by calling AddMvc() before calling UseMvc() in the Application Startup.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Resources.FormatUnableToFindServices">
            <summary>
            Unable to find the required services. Please add all the required services by calling AddMvc() before calling UseMvc() in the Application Startup.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Encodings.UTF8EncodingWithoutBOM">
            <summary>
            Returns UTF8 Encoding without BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Encodings.UTF16EncodingLittleEndian">
            <summary>
            Returns UTF16 Encoding which uses littleEndian byte order with BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.TaskHelper">
            <summary>
            Utility methods for dealing with <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.TaskHelper.WaitAndThrowIfFaulted(System.Threading.Tasks.Task)">
            <summary>
            Waits for the task to complete and throws the first faulting exception if the task is faulted.
            It preserves the original stack trace when throwing the exception.
            </summary>
            <remarks>
            Invoking this method is equivalent to calling Wait() on the <paramref name="task" /> if it is not completed.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.TaskHelper.WaitAndThrowIfFaulted``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Waits for the task to complete and throws the first faulting exception if the task is faulted.
            It preserves the original stack trace when throwing the exception.
            </summary>
            <remarks>
            Invoking this method is equivalent to calling <see cref="P:System.Threading.Tasks.Task`1.Result"/> on the
            <paramref name="task"/> if it is not completed.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.TypeHelper.ObjectToDictionary(System.Object)">
             <summary>
             Given an object, adds each instance property with a public get method as a key and its
             associated value to a dictionary.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then a copy
             is returned.
             </summary>
             <remarks>
             The implementation of PropertyHelper will cache the property accessors per-type. This is
             faster when the the same type is used multiple times with ObjectToDictionary.
             </remarks>
        </member>
        <member name="M:Microsoft.Framework.DependencyInjection.MvcServiceCollectionExtensions.ConfigureMvc(Microsoft.Framework.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNet.Mvc.MvcOptions})">
            <summary>
            Configures a set of <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/> for the application.
            </summary>
            <param name="services">The services available in the application.</param>
            <param name="setupAction">The <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/> which need to be configured.</param>
        </member>
        <member name="M:Microsoft.Framework.DependencyInjection.MvcServiceCollectionExtensions.WithControllersAsServices(Microsoft.Framework.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Register the specified <paramref name="controllerTypes"/> as services and as a source for controller
            discovery.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Framework.DependencyInjection.IServiceCollection"/>.</param>
            <param name="controllerTypes">A sequence of controller <see cref="T:System.Type"/>s to register in the
            <paramref name="services"/> and used for controller discovery.</param>
            <returns>The <see cref="T:Microsoft.Framework.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Framework.DependencyInjection.MvcServiceCollectionExtensions.WithControllersAsServices(Microsoft.Framework.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers controller types from the specified <paramref name="assemblies"/> as services and as a source
            for controller discovery.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Framework.DependencyInjection.IServiceCollection"/>.</param>
            <param name="controllerAssemblies">Assemblies to scan.</param>
            <returns>The <see cref="T:Microsoft.Framework.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast <see cref="T:Microsoft.Framework.Internal.PropertyHelper"/>.
            This constructor does not cache the helper. For caching, use <see cref="M:Microsoft.Framework.Internal.PropertyHelper.GetProperties(System.Object)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.GetProperties(System.Type)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            specified type.
            </summary>
            <param name="type">the type to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.GetVisibleProperties(System.Object)">
            <summary>
            <para>
            Creates and caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:Microsoft.Framework.Internal.PropertyHelper.GetVisibleProperties(System.Object)"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="instance">The instance to extract property accessors for.</param>
            <returns>
            A cached array of all public property getters from the instance's type.
            </returns>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.GetVisibleProperties(System.Type)">
            <summary>
            <para>
            Creates a caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:Microsoft.Framework.Internal.PropertyHelper.GetVisibleProperties(System.Object)"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <returns>
            A cached array of all public property getters from the type.
            </returns>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Framework.Internal.PropertyHelper.MakeFastPropertySetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter for reference types. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the setter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed. This only works for reference types.
            </remarks>
        </member>
    </members>
</doc>
